memory_allocation_failure.c:83:6: warning: Dereference of null pointer [core.NullDereference]
                        *(*(ptr+i)+j)=i;
                          ^~~~~~~~
memory_allocation_failure.c:278:1: warning: Potential memory leak [unix.Malloc]
}
^
memory_allocation_failure.c:291:6: warning: Value stored to 'buf' is never read [deadcode.DeadStores]
        buf = (char*) malloc(MAX_BUFFER * sizeof(char)); /*Tool should not detect this line as error*/ /*No ERROR:Memory allocation failure */
        ^     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
memory_allocation_failure.c:442:2: warning: Address of stack memory associated with local variable 'buf1' is still referred to by the stack variable 'ptr' upon returning to the caller.  This will be a dangling reference [core.StackAddressEscape]
        printf("%d",ret);
        ^~~~~~~~~~~~~~~~
memory_allocation_failure.c:442:2: warning: Address of stack memory associated with local variable 'buf3' is still referred to by the stack variable 'ptr' upon returning to the caller.  This will be a dangling reference [core.StackAddressEscape]
        printf("%d",ret);
        ^~~~~~~~~~~~~~~~
memory_allocation_failure.c:442:2: warning: Address of stack memory associated with local variable 'buf4' is still referred to by the stack variable 'ptr' upon returning to the caller.  This will be a dangling reference [core.StackAddressEscape]
        printf("%d",ret);
        ^~~~~~~~~~~~~~~~
memory_allocation_failure.c:442:2: warning: Address of stack memory associated with local variable 'buf5' is still referred to by the stack variable 'ptr' upon returning to the caller.  This will be a dangling reference [core.StackAddressEscape]
        printf("%d",ret);
        ^~~~~~~~~~~~~~~~
memory_allocation_failure.c:450:69: warning: Although the value stored to 'a' is used in the enclosing expression, the value is never actually read from 'a' [deadcode.DeadStores]
    (flag == 10)? (memory_allocation_failure_012_func_002(ptr)) : ( a =20);
                                                                    ^  ~~
memory_allocation_failure.c:451:38: warning: Although the value stored to 'a' is used in the enclosing expression, the value is never actually read from 'a' [deadcode.DeadStores]
    (flag == 10)? (ptr[1][1] = 200):(a=100);
                                     ^ ~~~
memory_allocation_failure.c:456:7: warning: Value stored to 'a' is never read [deadcode.DeadStores]
                a = ptr[1][1];
                ^   ~~~~~~~~~
10 warnings generated.
