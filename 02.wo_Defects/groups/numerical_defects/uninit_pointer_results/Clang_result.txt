uninit_pointer.c:95:14: warning: Address of stack memory associated with local variable 'buf1' is still referred to by the stack variable 'pbuf' upon returning to the caller.  This will be a dangling reference [core.StackAddressEscape]
        sink = ret;
             ^
uninit_pointer.c:95:14: warning: Address of stack memory associated with local variable 'buf2' is still referred to by the stack variable 'pbuf' upon returning to the caller.  This will be a dangling reference [core.StackAddressEscape]
        sink = ret;
             ^
uninit_pointer.c:95:14: warning: Address of stack memory associated with local variable 'buf3' is still referred to by the stack variable 'pbuf' upon returning to the caller.  This will be a dangling reference [core.StackAddressEscape]
        sink = ret;
             ^
uninit_pointer.c:95:14: warning: Address of stack memory associated with local variable 'buf4' is still referred to by the stack variable 'pbuf' upon returning to the caller.  This will be a dangling reference [core.StackAddressEscape]
        sink = ret;
             ^
uninit_pointer.c:95:14: warning: Address of stack memory associated with local variable 'buf5' is still referred to by the stack variable 'pbuf' upon returning to the caller.  This will be a dangling reference [core.StackAddressEscape]
        sink = ret;
             ^
uninit_pointer.c:131:56: warning: Potential leak of memory pointed to by 'buf1' [unix.Malloc]
        if (!buf1 || !buf2 || !buf3 || !buf4 || !buf5) return;
                                                       ^~~~~~
uninit_pointer.c:131:56: warning: Potential leak of memory pointed to by 'buf2' [unix.Malloc]
        if (!buf1 || !buf2 || !buf3 || !buf4 || !buf5) return;
                                                       ^~~~~~
uninit_pointer.c:131:56: warning: Potential leak of memory pointed to by 'buf3' [unix.Malloc]
        if (!buf1 || !buf2 || !buf3 || !buf4 || !buf5) return;
                                                       ^~~~~~
uninit_pointer.c:131:56: warning: Potential leak of memory pointed to by 'buf4' [unix.Malloc]
        if (!buf1 || !buf2 || !buf3 || !buf4 || !buf5) return;
                                                       ^~~~~~
uninit_pointer.c:131:56: warning: Potential leak of memory pointed to by 'buf5' [unix.Malloc]
        if (!buf1 || !buf2 || !buf3 || !buf4 || !buf5) return;
                                                       ^~~~~~
uninit_pointer.c:226:27: warning: Result of 'malloc' is converted to a pointer of type 'unsigned int', which is incompatible with sizeof operand type 'unsigned int *' [unix.MallocSizeof]
    ptr = (unsigned int *)malloc(10*sizeof(unsigned int *));
           ~~~~~~~~~~~~~~ ^~~~~~    ~~~~~~~~~~~~~~~~~~~~~~
uninit_pointer.c:431:1: warning: Potential leak of memory pointed to by 's' [unix.Malloc]
}
^
12 warnings generated.
