Found 11 issues

endless_loop.c:22: warning: CONDITION_ALWAYS_TRUE
  Boolean condition  `!1` is always false at line 22, column 11.
  20.   	int a = 0;
  21.   	int i;
  22. > 	for (i = 0; ; i ++)
  23.   	{
  24.   		a ++; /*Tool should Not detect this line as error*/ /*No ERROR:Unintentional end less loop*/

endless_loop.c:24: error: INTEGER_OVERFLOW_L5
  ([0, +oo] + 1):signed32.
  22.   	for (i = 0; ; i ++)
  23.   	{
  24. > 		a ++; /*Tool should Not detect this line as error*/ /*No ERROR:Unintentional end less loop*/
  25.   		if (i > 5)
  26.   		{

endless_loop.c:45: error: INTEGER_OVERFLOW_L5
  ([0, +oo] + 1):signed32.
  43.   	for (i = 0; i < 10; )
  44.   	{
  45. > 		a ++;
  46.   		i ++; /*Tool should Not detect this line as error*/ /*No ERROR:Unintentional end less loop*/
  47.   	}

endless_loop.c:60: warning: CONDITION_ALWAYS_TRUE
  Boolean condition  `!1` is always false at line 60, column 9.
  58.   	int ret;
  59.   	int a = 0;
  60. > 	while (1)
  61.   	{
  62.   		a ++; /*Tool should Not detect this line as error*/ /*No ERROR:Unintentional end less loop*/

endless_loop.c:81: warning: CONDITION_ALWAYS_TRUE
  Boolean condition  `!flag` is always false at line 81, column 9.
  79.   	int a = 0;
  80.   	int flag = 1;
  81. > 	while (flag)
  82.   	{
  83.   		a ++; /*Tool should Not detect this line as error*/ /*No ERROR:Unintentional end less loop*/

endless_loop.c:97: error: PURE_FUNCTION
  Side-effect free function endless_loop_005_func_001.
  95.    * Complexity: while statement	The return value of the function
  96.    */
  97. > int endless_loop_005_func_001 ()
  98.   {
  99.   	return 1;

endless_loop.c:106: warning: CONDITION_ALWAYS_TRUE
  Boolean condition  `!returned by endless_loop_005_func_001()` is always false at line 106, column 9.
  104.   	int ret;
  105.   	int a = 0;
  106. > 	while (endless_loop_005_func_001())
  107.   	{ /*Tool should Not detect this line as error*/ /*No ERROR:Unintentional end less loop*/
  108.   		a ++;

endless_loop.c:106: error: INVARIANT_CALL
  The call to endless_loop_005_func_001 at line 106, column 9 is loop-invariant. It can be moved out of the loop at line 106, column 2.
  104.   	int ret;
  105.   	int a = 0;
  106. > 	while (endless_loop_005_func_001())
  107.   	{ /*Tool should Not detect this line as error*/ /*No ERROR:Unintentional end less loop*/
  108.   		a ++;

endless_loop.c:152: warning: CONDITION_ALWAYS_TRUE
  Boolean condition  `!(flag>0)` is always false at line 152, column 9.
  150.   	int a = 0;
  151.   	int flag = 1;
  152. > 	while (flag > 0) /*Tool should Not detect this line as error*/ /*No ERROR:Unintentional end less loop*/
  153.   	{
  154.   		a ++;

endless_loop.c:173: warning: CONDITION_ALWAYS_TRUE
  Boolean condition  `!(flag==0)` is always false at line 173, column 9.
  171.   	int a = 0;
  172.   	int flag = 0;
  173. > 	while (flag == 0) /*Tool should Not detect this line as error*/ /*No ERROR:Unintentional end less loop*/
  174.   	{
  175.   		a ++;

endless_loop.c:201: warning: CONDITION_ALWAYS_TRUE
  Boolean condition  `!1` is always false at line 201, column 9.
  199.   		}
  200.   	}
  201. > 	while (1); /*Tool should Not detect this line as error*/ /*No ERROR:Unintentional end less loop*/
  202.   	ret = a;
  203.           sink = ret;

Summary of the reports

  CONDITION_ALWAYS_TRUE: 7
    INTEGER_OVERFLOW_L5: 2
          PURE_FUNCTION: 1
         INVARIANT_CALL: 1