Found 38 issues

buffer_overrun_dynamic.c:26: error: BUFFER_OVERRUN_L2
  Offset: [0, 5] Size: 5.
  24.   		for (i=0;i<=5;i++)
  25.   	    {
  26. > 			buf[i]=1; /*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/
  27.   	    }
  28.   	    free(buf);

buffer_overrun_dynamic.c:41: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  39.   	if(buf!=NULL)
  40.   	{
  41. > 		*(buf+5)=1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/
  42.   		free(buf);
  43.   	}

buffer_overrun_dynamic.c:61: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  59.   			buf[i]=1;
  60.   		}
  61. > 		ret = buf[5];/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/
  62.   		free(buf);
  63.   		printf("%d",ret);

buffer_overrun_dynamic.c:76: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  74.   	if(buf!=NULL)
  75.   	{
  76. > 		*(buf+5) = 1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/
  77.   		free(buf);
  78.   	}

buffer_overrun_dynamic.c:93: error: BUFFER_OVERRUN_L2
  Offset: [0, 5] Size: 5.
  91.   		for(i=0;i<=5;i++)
  92.   		{
  93. > 			buf[i]=1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/
  94.   		}
  95.   		free(buf);

buffer_overrun_dynamic.c:111: error: BUFFER_OVERRUN_L2
  Offset: [0, 5] Size: 5.
  109.   		for(i=0;i<=5;i++)
  110.   		{
  111. > 			buf[i]=1.0;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/
  112.   		}
  113.   	    free(buf);

buffer_overrun_dynamic.c:129: error: BUFFER_OVERRUN_L2
  Offset: [0, 5] Size: 5.
  127.   		for(i=0;i<=5;i++)
  128.   		{
  129. > 			buf[i]=1.0;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/
  130.   		}
  131.   	    free(buf);

buffer_overrun_dynamic.c:151: error: BUFFER_OVERRUN_L2
  Offset: [0, 5] Size: 5.
  149.   		for(j=0;j<=5;j++)
  150.   		{
  151. > 			*(*(buf+i)+j)=i;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/
  152.   		}
  153.   		free(buf[i]);

buffer_overrun_dynamic.c:173: error: BUFFER_OVERRUN_L1
  Offset: 6 Size: 5.
  171.   	for(i=0;i<5;i++)
  172.   	{
  173. > 		*((*pbuf[i])+j)=5;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/
  174.   	}
  175.   	free(buf1);

buffer_overrun_dynamic.c:197: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  195.   	if(sbuf!=NULL)
  196.   	{
  197. > 	    sbuf[5].a = 1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/
  198.   	    free(sbuf);
  199.   	}

buffer_overrun_dynamic.c:232: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  230.   	if(buf!=NULL)
  231.   	{
  232. > 		*(buf+index)=9;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/
  233.   		free(buf);
  234.   	}

buffer_overrun_dynamic.c:247: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  245.   	if(buf!=NULL)
  246.   	{
  247. > 	    buf[index] = 1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/
  248.   	    free(buf);
  249.   	}

buffer_overrun_dynamic.c:262: error: BUFFER_OVERRUN_L1
  Offset: 7 Size: 5.
  260.   	if(buf!=NULL)
  261.   	{
  262. > 	    *(buf +((2 * index) + 1)) = 1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/
  263.   	    free(buf);
  264.   	}

buffer_overrun_dynamic.c:277: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  275.   	if(buf!=NULL)
  276.   	{
  277. > 	    buf[(index * index) + 1] = 1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/
  278.   	    free(buf);
  279.   	}

buffer_overrun_dynamic.c:287: error: PURE_FUNCTION
  Side-effect free function dynamic_buffer_overrun_016_func_001.
  285.    */
  286.   
  287. > int dynamic_buffer_overrun_016_func_001 ()
  288.   {
  289.   	return 5;

buffer_overrun_dynamic.c:297: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  295.   	if(buf!=NULL)
  296.   	{
  297. > 	    buf[dynamic_buffer_overrun_016_func_001 ()] = 1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/
  298.   	    free(buf);
  299.   	}

buffer_overrun_dynamic.c:318: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5 by call to `dynamic_buffer_overrun_017_func_001`.
  316.   void dynamic_buffer_overrun_017 ()
  317.   {
  318. > 	dynamic_buffer_overrun_017_func_001(5);
  319.   }
  320.   

buffer_overrun_dynamic.c:332: error: BUFFER_OVERRUN_L1
  Offset: 4 Size: 4.
  330.   	if(buf!=NULL)
  331.   	{
  332. > 	    *(buf+indexes[index]) = 1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/
  333.   	    free(buf);
  334.   	}

buffer_overrun_dynamic.c:332: error: BUFFER_OVERRUN_L2
  Offset: [3, 6] Size: 5.
  330.   	if(buf!=NULL)
  331.   	{
  332. > 	    *(buf+indexes[index]) = 1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/
  333.   	    free(buf);
  334.   	}

buffer_overrun_dynamic.c:349: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  347.   	if(buf!=NULL)
  348.   	{
  349. > 	    buf[index1] = 1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/
  350.   	    free(buf);
  351.   	}

buffer_overrun_dynamic.c:368: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  366.   	if(buf!=NULL)
  367.   	{
  368. > 	    buf[index2] = 1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/
  369.   	    free(buf);
  370.   	}

buffer_overrun_dynamic.c:386: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  384.   		p1 = buf;
  385.   		p2 = p1;
  386. > 		*(p2+5) = 1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/
  387.   	    free(buf);
  388.   	}

buffer_overrun_dynamic.c:402: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  400.   	{
  401.   	    p = buf;
  402. > 	    *(p+5) = 1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/
  403.   	    free(buf);
  404.   	}

buffer_overrun_dynamic.c:421: error: BUFFER_OVERRUN_L4
  Offset: [0, +oo] Size: 5.
  419.   	    for (i = 0; i <= 5; i ++)
  420.   	    {
  421. > 		    *p = 1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/
  422.   		     p ++;
  423.   	    }

buffer_overrun_dynamic.c:432: error: PURE_FUNCTION
  Side-effect free function dynamic_buffer_overrun_024_func_001.
  430.    * overrun when passing the base pointer to a function
  431.    */
  432. > void dynamic_buffer_overrun_024_func_001 (int *buf)
  433.   {
  434.   	*(buf+5) = 1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/

buffer_overrun_dynamic.c:441: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5 by call to `dynamic_buffer_overrun_024_func_001`.
  439.   	int *buf=(int*) calloc(5,sizeof(int));
  440.   
  441. > 	dynamic_buffer_overrun_024_func_001(buf);
  442.   	if(buf!=NULL)
  443.   	{

buffer_overrun_dynamic.c:461: error: BUFFER_OVERRUN_L2
  Offset: [0, 5] Size: 5.
  459.   		for(i=0;i<=5;i++)
  460.   		{
  461. > 			buf[i]='1';/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/
  462.   		}
  463.   	    free(buf);

buffer_overrun_dynamic.c:479: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 1.
  477.   	if(buf!=NULL)
  478.   	{
  479. > 	    *(p + 5) = 1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/
  480.   	    free(buf);
  481.   	}

buffer_overrun_dynamic.c:495: error: BUFFER_OVERRUN_L1
  Offset: 30 Size: 20.
  493.   	if(buf!=NULL)
  494.   	{
  495. > 	    *(p + 30) = 1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/
  496.   	    free(buf);
  497.   	}

buffer_overrun_dynamic.c:513: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  511.   	    	*(buf1+i)=i;
  512.   		}
  513. >     	*(buf2+*(buf1+5))=1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/
  514.   	    free(buf1);
  515.   	    free(buf2);

buffer_overrun_dynamic.c:513: error: BUFFER_OVERRUN_L2
  Offset: [0, 4] Size: 3.
  511.   	    	*(buf1+i)=i;
  512.   		}
  513. >     	*(buf2+*(buf1+5))=1;/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/
  514.   	    free(buf1);
  515.   	    free(buf2);

buffer_overrun_dynamic.c:531: error: BUFFER_OVERRUN_L1
  Offset: 2 Size: 1.
  529.   		if(buf!=NULL)
  530.   		{
  531. > 		    buf[i+1]='a';/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/
  532.   		    free(buf);
  533.   		}

buffer_overrun_dynamic.c:522: error: PURE_FUNCTION
  Side-effect free function dynamic_buffer_overrun_029.
  520.    * overrun in while loop
  521.    */
  522. > void dynamic_buffer_overrun_029()
  523.   {
  524.   

buffer_overrun_dynamic.c:558: error: BUFFER_OVERRUN_L2
  Offset: [0, 10] Size: 10.
  556.   		for(j=0;j<=10;j++)
  557.   		{
  558. > 		  doubleptr[i][j]='a';    	/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/
  559.   		}
  560.   		free(doubleptr[i]);

buffer_overrun_dynamic.c:543: error: PURE_FUNCTION
  Side-effect free function dynamic_buffer_overrun_030.
  541.   */
  542.   
  543. > void dynamic_buffer_overrun_030()
  544.   {
  545.   	int i,j;

buffer_overrun_dynamic.c:579: error: BUFFER_OVERRUN_L2
  Offset: [0, 12] Size: 12.
  577.   	    for(i=0;i<=12;i++)
  578.   	    {
  579. > 	    	ptr1[i]='a';/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*/
  580.   	    }
  581.       	ptr1[11]='\0';

buffer_overrun_dynamic.c:606: error: BUFFER_OVERRUN_L2
  Offset: [0, 10] Size: 10.
  604.   	    for(i=0;i<=10;i++)
  605.   	    {
  606. > 	    	ptr_s[i].arr[i]='a';/*Tool should detect this line as error*/ /*ERROR:Buffer overrun*///vm - Changed arri(int) to arr(char);
  607.   	    }
  608.   	    free(ptr_s);

buffer_overrun_dynamic.c:598: error: PURE_FUNCTION
  Side-effect free function dynamic_buffer_overrun_032.
  596.   }dynamic_buffer_overrun_s_005;
  597.   
  598. > void dynamic_buffer_overrun_032()
  599.   {	
  600.   	dynamic_buffer_overrun_s_005* ptr_s= malloc(10*sizeof(dynamic_buffer_overrun_s_005));

Summary of the reports

  BUFFER_OVERRUN_L1: 21
  BUFFER_OVERRUN_L2: 11
      PURE_FUNCTION: 5
  BUFFER_OVERRUN_L4: 1