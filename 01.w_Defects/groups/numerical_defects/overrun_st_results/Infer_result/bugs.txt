Found 67 issues

overrun_st.c:21: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  19.   {
  20.   	char buf[5];
  21. > 	buf[5] = 1; /*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  22.           sink = buf[idx];
  23.   }

overrun_st.c:32: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  30.   {
  31.   	short buf[5];
  32. > 	buf[5] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  33.           sink = buf[idx];
  34.   }

overrun_st.c:44: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  42.   	int buf[5] = {1, 2, 3, 4, 5};
  43.   	int ret;
  44. > 	ret = buf[5];/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  45.           sink = buf[idx];
  46.   }

overrun_st.c:55: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  53.   {
  54.   	int buf[5];
  55. > 	buf[5] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  56.           sink = buf[idx];
  57.   }

overrun_st.c:66: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  64.   {
  65.   	long buf[5];
  66. > 	buf[5] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  67.           sink = buf[idx];
  68.   }

overrun_st.c:77: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  75.   {
  76.   	float buf[5];
  77. > 	buf[5] = 1.0;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  78.           sink = buf[idx];
  79.   }

overrun_st.c:88: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  86.   {
  87.   	double buf[5];
  88. > 	buf[5] = 1.0;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  89.           sink = buf[idx];
  90.   }

overrun_st.c:99: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  97.   {
  98.   	int buf[5][6];
  99. > 	buf[5][5] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  100.           sink = buf[idx][idx];
  101.   }

overrun_st.c:110: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  108.   {
  109.   	int buf[5][6][7];
  110. > 	buf[5][5][6] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  111.           sink = buf[idx][idx][idx];
  112.   }

overrun_st.c:110: error: BUFFER_OVERRUN_L1
  Offset: 6 Size: 6.
  108.   {
  109.   	int buf[5][6][7];
  110. > 	buf[5][5][6] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  111.           sink = buf[idx][idx][idx];
  112.   }

overrun_st.c:126: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  124.   	int buf5[5];
  125.   	int *pbuf[5] = {buf1, buf2, buf3, buf4, buf5};
  126. > 	pbuf[4][5] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  127.   }
  128.   

overrun_st.c:118: error: PURE_FUNCTION
  Side-effect free function overrun_st_010.
  116.    * Complexity: pointer arrays	int	Constant	Write
  117.    */
  118. > void overrun_st_010 ()
  119.   {
  120.   	int buf1[6];

overrun_st.c:142: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  140.   {
  141.   	overrun_st_011_s_001 sbuf[5];
  142. > 	sbuf[5].a = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  143.   }
  144.   

overrun_st.c:139: error: PURE_FUNCTION
  Side-effect free function overrun_st_011.
  137.   } overrun_st_011_s_001;
  138.   
  139. > void overrun_st_011 ()
  140.   {
  141.   	overrun_st_011_s_001 sbuf[5];

overrun_st.c:169: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  167.   	int buf[5];
  168.   	int index = 5;
  169. > 	buf[index] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  170.           sink = buf[idx];
  171.   }

overrun_st.c:182: error: BUFFER_OVERRUN_U5
  Offset: [-oo, +oo] Size: 5.
  180.   	int index;
  181.   	index = rand();
  182. > 	buf[index] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  183.           sink = buf[idx];
  184.   }

overrun_st.c:194: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  192.   	int buf[5];
  193.   	int index = 2;
  194. > 	buf[(2 * index) + 1] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  195.           sink = buf[idx];
  196.   }

overrun_st.c:206: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  204.   	int buf[5];
  205.   	int index = 2;
  206. > 	buf[(index * index) + 1] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  207.           sink = buf[idx];
  208.   }

overrun_st.c:214: error: PURE_FUNCTION
  Side-effect free function overrun_st_017_func_001.
  212.    * Complexity: 1-dimensional array	int	The return value of the function	Write
  213.    */
  214. > int overrun_st_017_func_001 ()
  215.   {
  216.   	return 5;

overrun_st.c:222: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  220.   {
  221.   	int buf[5];
  222. > 	buf[overrun_st_017_func_001()] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  223.           sink = buf[idx];
  224.   }

overrun_st.c:250: error: BUFFER_OVERRUN_L2
  Offset: [3, 6] Size: 5.
  248.   	int indexes[4] = {3, 4, 5, 6};
  249.   	int index = 2;
  250. > 	buf[indexes[index]] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  251.           sink = buf[idx];
  252.   }

overrun_st.c:264: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  262.   	int index1;
  263.   	index1 = index;
  264. > 	buf[index1] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  265.           sink = buf[idx];
  266.   }

overrun_st.c:280: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  278.   	index1 = index;
  279.   	index2 = index1;
  280. > 	buf[index2] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  281.           sink = buf[idx];
  282.   }

overrun_st.c:293: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  291.   	char *p;
  292.   	p = buf;
  293. > 	*(p + 5) = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  294.           sink = buf[idx];
  295.   }

overrun_st.c:306: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  304.   	short *p;
  305.   	p = buf;
  306. > 	*(p + 5) = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  307.           sink = buf[idx];
  308.   }

overrun_st.c:320: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  318.   	int ret;
  319.   	p = buf;
  320. > 	ret = *(p + 5);/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  321.           sink = buf[idx];
  322.   }

overrun_st.c:333: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  331.   	int *p;
  332.   	p = buf;
  333. > 	*(p + 5) = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  334.           sink = buf[idx];
  335.   }

overrun_st.c:346: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  344.   	long *p;
  345.   	p = buf;
  346. > 	*(p + 5) = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  347.           sink = buf[idx];
  348.   }

overrun_st.c:359: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  357.   	float *p;
  358.   	p = buf;
  359. > 	*(p + 5) = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  360.           sink = buf[idx];
  361.   }

overrun_st.c:372: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  370.   	double *p;
  371.   	p = buf;
  372. > 	*(p + 5) = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  373.           sink = buf[idx];
  374.   }

overrun_st.c:387: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  385.   	p = buf;
  386.   	pp = &p;
  387. > 	*(*pp + 5) = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  388.           sink = buf[idx];
  389.   }

overrun_st.c:402: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  400.   	p1 = buf;
  401.   	p2 = p1;
  402. > 	p2[5] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  403.           sink = buf[idx];
  404.   }

overrun_st.c:411: error: PURE_FUNCTION
  Side-effect free function overrun_st_031.
  409.    */
  410.   int overrun_st_031_buf_gbl[5];
  411. > void overrun_st_031 ()
  412.   {
  413.   	int *p;

overrun_st.c:428: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  426.   	int index = 5;
  427.   	p = buf;
  428. > 	*(p + index) = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  429.           sink = buf[idx];
  430.   }

overrun_st.c:443: error: BUFFER_OVERRUN_U5
  Offset: [-oo, +oo] Size: 5.
  441.   	p = buf;
  442.   	index = rand();
  443. > 	*(p + index) = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  444.           sink = buf[idx];
  445.   }

overrun_st.c:457: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  455.   	int index = 2;
  456.   	p = buf;
  457. > 	*(p + ((2 * index) + 1)) = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  458.           sink = buf[idx];
  459.   }

overrun_st.c:471: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  469.   	int index = 2;
  470.   	p = buf;
  471. > 	*(p + ((index * index) + 1)) = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  472.           sink = buf[idx];
  473.   }

overrun_st.c:479: error: PURE_FUNCTION
  Side-effect free function overrun_st_036_func_001.
  477.    * Complexity: 1  pointer	int	single Alias 	The return value of the function	Write
  478.    */
  479. > int overrun_st_036_func_001 ()
  480.   {
  481.   	return 5;

overrun_st.c:489: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  487.   	int *p;
  488.   	p = buf;
  489. > 	*(p + overrun_st_036_func_001()) = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  490.           sink = buf[idx];
  491.   }

overrun_st.c:508: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5 by call to `overrun_st_037_func_001`.
  506.   void overrun_st_037 ()
  507.   {
  508. > 	overrun_st_037_func_001(5);
  509.   }
  510.   

overrun_st.c:508: error: BUFFER_OVERRUN_L5
  Offset: [-oo, +oo] Size: 5 by call to `overrun_st_037_func_001`.
  506.   void overrun_st_037 ()
  507.   {
  508. > 	overrun_st_037_func_001(5);
  509.   }
  510.   

overrun_st.c:522: error: BUFFER_OVERRUN_L2
  Offset: [3, 6] Size: 5.
  520.   	int index = 2;
  521.   	p = buf;
  522. > 	*(p + indexes[index]) = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  523.           sink = buf[idx];
  524.   }

overrun_st.c:538: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  536.   	index1 = index;
  537.   	p = buf;
  538. > 	*(p + index1) = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  539.           sink = buf[idx];
  540.   }

overrun_st.c:556: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  554.   	index2 = index1;
  555.   	p = buf;
  556. > 	*(p + index2) = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  557.           sink = buf[idx];
  558.   }

overrun_st.c:570: error: BUFFER_OVERRUN_L2
  Offset: [0, 5] Size: 5.
  568.   	for (i = 0; i <= 5; i ++)
  569.   	{
  570. > 		buf[i] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  571.   	}
  572.           sink = buf[idx];

overrun_st.c:588: error: BUFFER_OVERRUN_L2
  Offset: [0, 5] Size: 5.
  586.   		for (j = 0; j < 6; j ++)
  587.   		{
  588. > 			buf[i][j] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  589.   		}
  590.   	}

overrun_st.c:613: error: BUFFER_OVERRUN_L2
  Offset: [0, 5] Size: 5.
  611.   		for (j = 0; j < 6; j ++)
  612.   		{
  613. > 			pbuf[i][j] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  614.   		}
  615.   	}

overrun_st.c:598: error: PURE_FUNCTION
  Side-effect free function overrun_st_043.
  596.    * Complexity: for double-loop	Pointer arrays
  597.    */
  598. > void overrun_st_043 ()
  599.   {
  600.   	int buf1[6];

overrun_st.c:630: error: BUFFER_OVERRUN_L4
  Offset: [0, +oo] Size: 5.
  628.   	for (i = 0; i <= 5; i ++)
  629.   	{
  630. > 		*p = 1;
  631.   		p ++;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  632.   	}

overrun_st.c:648: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5 by call to `overrun_st_045_func_001`.
  646.   {
  647.   	int buf[5];
  648. > 	overrun_st_045_func_001(buf);
  649.           sink = buf[idx];
  650.   }

overrun_st.c:656: error: PURE_FUNCTION
  Side-effect free function overrun_st_046_func_001.
  654.    * Complexity: pointer -Pointer as function parameter
  655.    */
  656. > void overrun_st_046_func_001 (int *p)
  657.   {
  658.   	*(p + 5) = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */

overrun_st.c:664: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5 by call to `overrun_st_046_func_001`.
  662.   {
  663.   	int buf[5];
  664. > 	overrun_st_046_func_001(buf);
  665.           sink = buf[idx];
  666.   }

overrun_st.c:680: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5 by call to `overrun_st_047_func_001`.
  678.   {
  679.   	int buf[5];
  680. > 	overrun_st_047_func_001(buf);
  681.   }
  682.   

overrun_st.c:677: error: PURE_FUNCTION
  Side-effect free function overrun_st_047.
  675.   }
  676.   
  677. > void overrun_st_047 ()
  678.   {
  679.   	int buf[5];

overrun_st.c:687: error: PURE_FUNCTION
  Side-effect free function overrun_st_048_func_001.
  685.    * Complexities: pointer - An array as function parameter
  686.    */
  687. > void overrun_st_048_func_001 (int buf[])
  688.   {
  689.   	*(buf + 5) = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */

overrun_st.c:695: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5 by call to `overrun_st_048_func_001`.
  693.   {
  694.   	int buf[5];
  695. > 	overrun_st_048_func_001(buf);
  696.           sink = buf[idx];
  697.   }

overrun_st.c:706: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  704.   {
  705.   	int buf[] = {1, 2, 3, 4, 5};
  706. > 	buf[5] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  707.           sink = buf[idx];
  708.   }

overrun_st.c:724: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  722.   			{1, 2, 3, 4, 5, 6}
  723.   		};
  724. > 	buf[5][5] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  725.   }
  726.   

overrun_st.c:714: error: PURE_FUNCTION
  Side-effect free function overrun_st_050.
  712.    * Complexity: abbreviation for two-dimensional array array size
  713.    */
  714. > void overrun_st_050 ()
  715.   {
  716.   	int buf[][6] =

overrun_st.c:739: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  737.   	int buf5[] = {1, 2, 3, 4, 5};
  738.   	int *pbuf[] = {buf1, buf2, buf3, buf4, buf5};
  739. > 	pbuf[4][5] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  740.   }
  741.   

overrun_st.c:731: error: PURE_FUNCTION
  Side-effect free function overrun_st_051.
  729.    * Complexity: omission of the pointer array array size
  730.    */
  731. > void overrun_st_051 ()
  732.   {
  733.   	int buf1[] = {1, 2, 3, 4, 5, 6};

overrun_st.c:749: error: BUFFER_OVERRUN_L1
  Offset: 5 Size: 5.
  747.   {
  748.   	char buf[] = "1234";
  749. > 	buf[5] = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  750.   }
  751.   

overrun_st.c:746: error: PURE_FUNCTION
  Side-effect free function overrun_st_052.
  744.    * Complexity: omission of the size of the string pointer
  745.    */
  746. > void overrun_st_052 ()
  747.   {
  748.   	char buf[] = "1234";

overrun_st.c:761: error: BUFFER_OVERRUN_L1
  Offset: 2 Size: 2.
  759.   	int *p;
  760.   	p = (int*)buf;
  761. > 	*(p + 2) = 1;/*Tool should detect this line as error*/ /*ERROR: buffer overrun */
  762.   }
  763.   

overrun_st.c:756: error: PURE_FUNCTION
  Side-effect free function overrun_st_053.
  754.    * Complexity: cast large data size-small size
  755.    */
  756. > void overrun_st_053 ()
  757.   {
  758.   	char buf[8];

overrun_st.c:769: error: PURE_FUNCTION
  Side-effect free function overrun_st_054.
  767.    */
  768.   int overrun_st_054_buf_gbl[5];
  769. > void overrun_st_054 ()
  770.   {
  771.   	char *p;

overrun_st.c:786: error: BUFFER_OVERRUN_L5
  Offset: [-oo, +oo] Size: 5 by call to `overrun_st_001`.
  784.   	if (vflag == 1 || vflag ==888)
  785.   	{
  786. > 		overrun_st_001();
  787.   	}
  788.   

Summary of the reports

  BUFFER_OVERRUN_L1: 43
      PURE_FUNCTION: 14
  BUFFER_OVERRUN_L2: 5
  BUFFER_OVERRUN_U5: 2
  BUFFER_OVERRUN_L5: 2
  BUFFER_OVERRUN_L4: 1